{"version":3,"sources":["News.js","PriceTrackerNew.js","Crumbs/PriceTrackerUsed.js","Crumbs/Guides.js","Crumbs.js","App.js","registerServiceWorker.js","index.js"],"names":["News","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","_this2","fetch","then","res","json","finalArray","i","length","pageFunctionResult","concat","merged","sort","a","b","date","sorted","Date","setState","console","log","ref","off","Math","floor","random","toString","substr","react_default","createElement","map","item","onclick","target","class","href","link","key","text","src","image","alt","substring","indexOf","source","lib_default","React","Component","PriceTrackerNew","_getRandomColor","bind","assertThisInitialized","newArray","price","parseInt","replace","push","name","filter","thing","index","self","findIndex","t","style","margin","height","display","flexDirection","color","opacity","PriceTrackerUsed","Crumbs","handleSubmit","e","preventDefault","_input","document","getElementById","value","email","id","action","method","type","placeholder","PriceTrackerUsed_PriceTrackerUsed","Guides_PriceTrackerNew","App","error","PriceTrackerNew_PriceTrackerNew","News_News","Crumbs_Crumbs","ReactDOM","render","App_App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","URL","process","origin","addEventListener","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7667a3c3.chunk.js","sourcesContent":["import React from 'react';\nimport TimeAgo from 'react-timeago'\n\n\nexport default class News extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    \n\n    this.state = {\n      data: []\n    };\n\n  }\n\n  componentWillMount() {\n    fetch('https://api.apify.com/v1/rG44NsjnfukCkKecE/crawlers/Z79rSy82LB9BxDyaa/lastExec/results?token=u8HqK39BcB8PKAFsjMtb9Bnnh')\n          .then(res => { return res.json()})\n\n          // merge arrays from different sites\n          .then(json =>  {   let finalArray = []\n                             for (var i = 0; i < json.length; i++){\n                                    if (i === 0) { finalArray = json[0].pageFunctionResult; }\n                                    else { finalArray = finalArray.concat( json[i].pageFunctionResult ); }\n                                  } \n                             return finalArray\n                          })\n\n          // sort by date\n          .then(merged => {  return merged.sort((a,b) => (a.date < b.date) ? 1 : ((b.date < a.date) ? -1 : 0))  })\n\n          // convert date to string\n          .then(sorted => { \n                            for (var i = 0; i < sorted.length; i++){\n                                    sorted[i].date = new Date(sorted[i].date * 1000)\n                                    // sorted[i].date = sorted[i].date.substring(0, sorted[i].date.length - 6) + ' ' + sorted[i].date.substring(8)\n                                    // console.log(sorted[i].date)\n                                  } \n                            return sorted  \n                          })\n\n          // set results as state\n          .then((sorted) => { \n                          this.setState({data: sorted}); \n                          console.log(sorted)\n\n                          })\n    \n  }\n\n\n  componentWillUnmount() {\n    this.ref.off();\n  };\n\n\n  _getRandomColor () {\n    var hex = Math.floor(Math.random() * 0xFFFFFF);\n    return \"#\" + (\"000000\" + hex.toString(16)).substr(-6);\n  }\n\n\n  render() {\n    return (\n      <div>\n        {this.state.data.map(item => (\n          <a onclick=\"ga('send', 'event', 'NewsItem', 'clicked', 'textlinks');\" target=\"_blank\" class=\"item\" href={item.link}>\n                  <div key={item.text} class=\"newsItem\">\n                    <div>\n                      <img \n                          src={item.image} \n                          alt=\"\" \n                          class=\"newsImage\" />\n                    </div>\n                    <div>\n                      <p>\n                        {item.text.substring(0, item.text.indexOf('http'))}&nbsp;\n                        <span class=\"source\"><i>{item.source}</i></span>\n                      </p> \n                    </div>\n                    <div class=\"newsItemRight\">\n                      <p class=\"time\">\n                        <TimeAgo date={item.date} />\n                      </p>\n                    </div>\n                  </div>\n          </a>\n                ))}\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\n\nexport default class PriceTrackerNew extends React.Component {\n  constructor(props) {\n    super(props);\n    this._getRandomColor = this._getRandomColor.bind(this);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentWillMount() {\n      fetch('https://api.apify.com/v1/rG44NsjnfukCkKecE/crawlers/dqChEgEi92GTiNG9a/lastExec/results?token=p7r3cZrnv5BnGn9c4kC7PpcPT')\n            .then((res) => { return res.json()})\n            \n            // merge arrays from different sites\n            .then(res =>  {   let finalArray = []\n                               for (var i = 0; i < res.length; i++){\n                                      if (i === 0) { finalArray = res[0].pageFunctionResult; }\n                                      else { finalArray = finalArray.concat( res[i].pageFunctionResult ); }\n                                    } \n                               return finalArray\n                            })\n\n            // add some stuff\n            .then(res => {  \n                      let newArray = res; \n                      for (var i = 0; i < res.length; i++){ \n                              newArray[i].price = parseInt(newArray[i].price.replace(',', '').replace('$', ''));\n                              newArray[i].link = \"https://www.edmunds.com\"+newArray[i].link;\n                      }; \n                      return newArray\n                    }\n            )\n\n            // add teslas\n            .then((res) => { res.push(\n                                { name: 'NEW Tesla Model 3', price: '42900', image: 'https://www.tesla.com/tesla_theme/assets/img/model3/hero-img--touch.jpg?20170801', link: 'https://3.tesla.com/model3/design#battery'},\n                                { name: 'NEW Tesla Model S', price: '85000', image: 'https://i0.wp.com/eastwest.thegadgetman.org.uk/wp-content/uploads/2017/07/tesla256.png?fit=256%2C256&ssl=1', link: 'https://www.tesla.com/modelx/design#battery'},\n                                { name: 'NEW Tesla Model X', price: '88000', image: 'https://pbs.twimg.com/profile_images/713511184910139392/_hAw3t46_400x400.jpg', link: 'https://www.tesla.com/models/design#battery'}\n                                ) \n                            return res\n                          })\n\n            // deduplicate\n            .then((res) => {\n                        res = res.filter((thing, index, self) =>\n                          index === self.findIndex((t) => (\n                             t.name === thing.name\n                        )))\n                        return res\n            })\n\n            // sort\n            .then(res => {  \n                      return res.sort((a, b) => a.price - b.price)  })\n\n            // set results as state\n            .then((res) => {\n                        this.setState({data: res}); \n                        // console.log(res)\n            })\n     \n  }\n\n\n\n  componentWillUnmount() {\n\n  };\n\n  _getRandomColor () {\n    var hex = Math.floor(Math.random() * 0xFFFFFF);\n    return \"#\" + (\"000000\" + hex.toString(16)).substr(-6);\n  }\n\n\n  render() {\n    return (\n      <div style={{margin: 5, height: '100%'}}>\n        {this.state.data.map(item => (\n                  <a href={item.link} target=\"_blank\" >\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                      \n                      <div>\n                        <span style={{color: 'gold', opacity: .7}}>${item.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\n                      </div>\n                      <div class=\"carName\" key={item.name}>\n                          <div>\n                            {item.name.replace('NEW', '')}\n                          </div>\n                      </div>\n\n                    </div>\n                  </a>                  \n                ))}\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\n\nexport default class PriceTrackerUsed extends React.Component {\n  constructor(props) {\n    super(props);\n    this._getRandomColor = this._getRandomColor.bind(this);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentWillMount() {\n      fetch('https://api.apify.com/v1/rG44NsjnfukCkKecE/crawlers/ssxDRduoSE3XdkzLv/lastExec/results?token=vDBYC8EeGdBZpYPrrrXLEjmwF')\n        .then((res) => { return res.json()})\n        \n        // merge arrays from different sites\n        .then(res =>  {   let finalArray = []\n                           for (var i = 0; i < res.length; i++){\n                                  if (i === 0) { finalArray = res[0].pageFunctionResult; }\n                                  else { finalArray = finalArray.concat( res[i].pageFunctionResult ); }\n                                } \n                           return finalArray\n                        })\n\n        // deduplicate\n        .then((res) => {\n                    res = res.filter((thing, index, self) =>\n                      index === self.findIndex((t) => (\n                         t.name === thing.name\n                      ))\n                    )\n                    return res\n        })\n\n        // sort\n        .then(res => {  \n                  let newArray = res; for (var i = 0; i < res.length; i++){ newArray[i].price = parseInt(newArray[i].price.replace(',', '').replace('$', '')) }; \n                  return newArray.sort((a, b) => a.price - b.price)  })\n\n        // set results as state\n        .then((res) => {\n                    this.setState({data: res}); \n                    // console.log(res)\n        })\n     \n  }\n\n\n\n  componentWillUnmount() {\n\n  };\n\n  _getRandomColor () {\n    var hex = Math.floor(Math.random() * 0xFFFFFF);\n    return \"#\" + (\"000000\" + hex.toString(16)).substr(-6);\n  }\n\n\n  render() {\n    return (\n      <div class=\"box\">\n        <p><b>Used Electric Vehicle Prices (updated daily)</b></p>\n        {this.state.data.map(item => (\n                  <a href={\"https://www.edmunds.com\"+item.link} target=\"_blank\" >\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                      \n                      <div>\n                        <span style={{color: 'dodgerblue', opacity: .4}}>${item.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\n                      </div>\n                      <div class=\"carName\" key={item.name}>\n                          <div>\n                            {item.name.replace('USED', '')}\n                          </div>\n                      </div>\n\n                    </div>\n                  </a>                  \n                ))}\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\n\nexport default class PriceTrackerNew extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n\n\n  render() {\n    return (\n      <div class=\"box\">  \n                <p><b>Other Guides</b></p>\n                <ol>\n\n                  <li>\n                    <a onclick=\"ga('send', 'event', 'Article', 'clicked', 'textlinks');\"\n                       target=\"_blank\" href=\"https://sunboxlabs.com/200-apartment-solar-system/\">\n                    Project: $200 Off-Grid Solar For Apartments \n                    </a>&nbsp;\n                  </li>\n                  \n                  <li>\n                    <a onclick=\"ga('send', 'event', 'Article', 'clicked', 'textlinks');\"\n                    target=\"_blank\" href=\"https://sunboxlabs.com/burning-man-solar/\">\n                    Project: Burning Man System \n                    </a>&nbsp;\n                  </li>\n                  \n                  <li>\n                    <a onclick=\"ga('send', 'event', 'Article', 'clicked', 'textlinks');\"\n                    target=\"_blank\" href=\"https://sunboxlabs.com/what-will-solar-run/\">\n                    Project: Low-energy devices for an off-grid home \n                    </a>&nbsp;\n                  </li>\n                  \n                  <li>\n                    <a onclick=\"ga('send', 'event', 'Article', 'clicked', 'textlinks');\"\n                    target=\"_blank\" href=\"https://sunboxlabs.com/200-solar-lithium-update/\">\n                    Simplified 100W Lithium System \n                    </a>&nbsp;\n                  </li>\n                  \n                  \n                </ol>\n            </div>\n    )\n  }\n}\n","import React from 'react';\n\nimport PriceTrackerUsed from './Crumbs/PriceTrackerUsed'\nimport Guides from './Crumbs/Guides'\n\n\nexport default class Crumbs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillMount() {\n\n      \n  }\n\n  \n  handleSubmit(e) {\n      e.preventDefault();\n      console.log('uas')\n      var _input = document.getElementById(\"myInput\").value\n      console.log(_input)\n      this.ref.push({\n        email: _input\n      });\n      document.getElementById('theForm').style.display = 'none';\n  }\n  \n\n  componentWillUnmount() {\n\n  };\n\n \n\n  render() {\n    return (\n      <div>\n        <div class=\"box\" id=\"theForm\">\n          \n          <p><b>List your Used or New EV here too:</b></p>\n          <form action=\"https://formspree.io/n.dunkel@gmail.com\"\n                method=\"POST\"\n                id=\"formspree\">\n              <input type=\"text\" placeholder=\"Your Car\" name=\"name\" />&nbsp;\n              <input type=\"email\" placeholder=\"your email\" name=\"_replyto\" />&nbsp;\n              <button type=\"submit\" value=\"Submit\"><b>+ Submit</b></button>\n          </form>\n\n          {/*<form>\n                <input\n                  id=\"myInput\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"youremail@example.com\"\n                />&nbsp;\n                <button onClick={this.handleSubmit}>submit</button>\n          </form>*/}\n        </div>\n\n        <div>\n          <PriceTrackerUsed />\n        </div>\n        \n        <div>\n          <Guides />\n        </div>\n    </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport News from './News'\nimport './styles.css';\nimport PriceTrackerNew from './PriceTrackerNew'\nimport Crumbs from './Crumbs'\n\n\n\nexport default class App extends React.Component{\n\n  onError(error){\n    console.log(error)\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = { }\n      \n  }\n\n  componentDidMount() {\n\n\n\n\n  }\n  \n  render(){\n    return (\n          <div >\n            <div class=\"title\">\n              <span>\n\n                <img src=\"/electron.png\" alt=\"\" />&nbsp;\n                <b>electrification</b> | EV Price Tracker & News Aggregator\n                <a class=\"AppButton\" href=\"https://itunes.apple.com/us/app/id1445602414\" target=\"blank\">Get the App</a>\n              </span>\n            </div>\n            \n\n\n            <div class=\"container\">\n\n              <div class=\"prices\">\n                <b>New Electric Vehicle Prices (updated daily)</b>\n                <div class=\"hr\"></div>\n                <PriceTrackerNew />\n              </div>\n\n              <div class=\"news\">\n                <b>Latest EV News</b>\n                <div class=\"hr\"></div>\n                <News />\n              </div>\n\n              <div class=\"crumbs\">\n                  <Crumbs />\n              </div>\n\n            </div>\n\n\n\n\n          </div>\n    )\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}